#!/bin/bash
# Vagrant provision script, to be run in guest when creating base box.
# Provisions a FieldWorks test machine.

set -xueo pipefail

# Duplicate output to a log file
exec &> >(tee "$(mktemp --tmpdir "provision-$(date +"%F-%H%M%S")-XXXXXXXXXX.log")")

# Helper method to avoid failing from a network hiccup during provision
function tryharderto() { i=0; until "$@"; do ((++i <= 3))
  echo >&2 "Retrying ${i}"; sleep 2m; done }


# Vagrant Ubuntu setup
# --------------------

# Set mirror to generic
sudo perl -pi -e 's#/...archive.ubuntu.com#/archive.ubuntu.com#g' /etc/apt/sources.list

# Enable multiverse repository
sudo perl -pi -e '/multiverse/ and !/backports/ and s/^# //' /etc/apt/sources.list

# Turn off automatic updates, so that a user won't turn off the machine during
# updates, which may make a mess.
sudo tee /etc/apt/apt.conf.d/90disable-auto-updates >/dev/null <<END
APT::Periodic::Update-Package-Lists "0";
APT::Periodic::Download-Upgradeable-Packages "0";
APT::Periodic::AutocleanInterval "0";
APT::Periodic::Unattended-Upgrade "0";
END

# Apply all available updates
tryharderto sudo apt-get update
tryharderto sudo apt-get --assume-yes upgrade
tryharderto sudo apt-get --assume-yes dist-upgrade

# Swap shouldn't be necessary and may cause unnecessary churn when backing up the guest
# image. Disable and delete the swapfile.
sudo swapoff --all &&
  sudo perl -ni -e 'print unless /swapfile/' /etc/fstab &&
  sudo rm -vf /swapfile

# Don't prompt for OS upgrade to newer release
sudo perl -pi -e 's/Prompt=lts/Prompt=never/' /etc/update-manager/release-upgrades

# sshd security settings
sudo mkdir --parents /etc/ssh/sshd_config.d
sudo tee /etc/ssh/sshd_config.d/no-password-authentication-or-root.conf >/dev/null <<END
PasswordAuthentication no
PermitRootLogin no
END

# Passwordless sudo
sudo tee /etc/sudoers.d/passwordless >/dev/null <<< 'vagrant ALL=(ALL) NOPASSWD: ALL'

sudo tee /etc/sudoers.d/stars >/dev/null <<END
# Show stars when typing sudo password.
Defaults pwfeedback
END
sudo chmod 0400 /etc/sudoers.d/stars

# Turn off error reporting from hogging memory
sudo perl -pi -e 's/enabled=1/enabled=0/' /etc/default/apport

# Make vagrant accessible via ssh
tryharderto sudo apt-get --assume-yes install openssh-server

# Install initial vagrant login key.
cd "$(mktemp -d)"
wget 'https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant.pub'
sha512sum -c <<< \
  'f1891f744e3619e19f737d8f2742a6ffe12681fcd6878ae5ed804556bcaa7762fdbd750ed653ee3c6cfb4bb159f860187446460102100f35685c32444c2300ad  vagrant.pub'
mkdir --parents ~/.ssh
chmod 0700 ~/.ssh
mv vagrant.pub ~/.ssh/authorized_keys
chmod 0600 ~/.ssh/authorized_keys

# Prepare for ssh host keys to be re-generated uniquely by users
sudo tee /root/regenerate-ssh-host-keys >/dev/null << END
#!/bin/bash
# Regenerate ssh host keys if not present
test -f /etc/ssh/ssh_host_rsa_key || dpkg-reconfigure openssh-server
END
sudo chmod +x /root/regenerate-ssh-host-keys
sudo tee /etc/systemd/system/regenerate-ssh-host-keys.service >/dev/null << END
[Unit]
Description=regenerate-ssh-host-keys

[Service]
ExecStart=/root/regenerate-ssh-host-keys

[Install]
WantedBy=multi-user.target
END
sudo systemctl enable regenerate-ssh-host-keys

# Don't blank or lock VM screen
gsettings set org.gnome.desktop.session idle-delay 0
gsettings set org.gnome.desktop.screensaver lock-enabled false

# Don't let deja-dup hassle user about backing up from within guest
tryharderto sudo apt-get --assume-yes remove deja-dup

# Adjust bash prompt
# Use colour
perl -pi -e '/#force/ and s/^#//' ~/.bashrc
# Place $ on next line
perl -pi -e '/PS1/ and s/\\\$ /\\n\\\$ /' ~/.bashrc
# Show exit code
perl -pi -e '/PS1/ and s/@/\$?/' ~/.bashrc

# Settings for Terminator
mkdir -p ~/.config/terminator
tee ~/.config/terminator/config >/dev/null <<END
[profiles]
  [[default]]
	scroll_on_output = False
	scrollback_infinite = True
END

# Don't report developer or tester usage to analytics
tee --append ~/.pam_environment >/dev/null <<END
FEEDBACK=false
WESAY_TRACK_AS_DEVELOPER=1
END

# Allow testers to log in to the QA server to send and receive
tee --append ~/.pam_environment >/dev/null <<< \
  'LANGUAGEFORGESERVER=-qa.languageforge.org'

# Record some base box version info, to help with diagnosis
tee ~/machine-info.txt >/dev/null <<END
Vagrant base box information
Name: fwtest-u2204
Version:
Creation date: $(date -I)
Installed from:
Notes:
END

# Install some communication tools, in case helpful
sudo snap install slack --classic
sudo snap install skype

# Keyboarding
tryharderto sudo apt-get --assume-yes install ibus-libpinyin ibus-table-thai
gsettings set org.gnome.desktop.input-sources sources \
  "[('xkb', 'us'), ('xkb', 'us+dvorak'), ('xkb', 'il'), ('xkb', 'ru'), ('ibus', 'libpinyin'), ('ibus', 'table:thai')]"

# Set unique background
IMAGE_CODE="Vw2HZQ1FGjU" # Zebras
mkdir --parents ~/.local/share/backgrounds
wget -O "${HOME}/.local/share/backgrounds/${IMAGE_CODE}-unsplash.jpg" \
  "https://unsplash.com/photos/${IMAGE_CODE}/download?force=true"
gsettings set org.gnome.desktop.background picture-uri \
  "file:///home/vagrant/.local/share/backgrounds/${IMAGE_CODE}-unsplash.jpg"
gsettings set org.gnome.desktop.screensaver picture-uri \
  "file:///home/vagrant/.local/share/backgrounds/${IMAGE_CODE}-unsplash.jpg"

tryharderto sudo apt-get --assume-yes install gnome-shell-extension-manager

# Configure panel
# ------------------

# Settings - Notifications - Do Not Disturb. Can be turned back on if important.
gsettings set org.gnome.desktop.notifications show-banners false
# Gedit: Menu - Preferences - Fonts & Colours - Solarized Dark
gsettings set org.gnome.gedit.preferences.editor scheme 'solarized-dark'
# Terminal: Menu - Preferences - Profiles > Unnamed - Colours.
# Under Text and Background Color, clear "Use colors from system theme"; Built-in schemes: Tango dark.
# Under Palette, Build-in schemes: Tango.
dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/use-theme-colors false
dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/background-color "'rgb(46,52,54)'"
dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/foreground-color "'rgb(211,215,207)'"
dconf write /org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/palette \
  "['rgb(46,52,54)', 'rgb(204,0,0)', 'rgb(78,154,6)', 'rgb(196,160,0)', 'rgb(52,101,164)', 'rgb(117,80,123)', 'rgb(6,152,154)', 'rgb(211,215,207)', 'rgb(85,87,83)', 'rgb(239,41,41)', 'rgb(138,226,52)', 'rgb(252,233,79)', 'rgb(114,159,207)', 'rgb(173,127,168)', 'rgb(52,226,226)', 'rgb(238,238,236)']"

# Add resource monitor
tryharderto sudo apt-get --assume-yes install indicator-multiload
sleep 3s
gsettings set de.mh21.indicator-multiload.general speed 10000
gsettings set de.mh21.indicator-multiload.general width 10
gsettings set de.mh21.indicator-multiload.graphs.mem enabled true
gsettings set de.mh21.indicator-multiload.graphs.net enabled true
gsettings set de.mh21.indicator-multiload.general background-color 'traditional:background'
gsettings set de.mh21.indicator-multiload.general color-scheme 'traditional'
gsettings set de.mh21.indicator-multiload.traces.cpu1 color 'traditional:cpu1'
gsettings set de.mh21.indicator-multiload.traces.cpu2 color 'traditional:cpu2'
gsettings set de.mh21.indicator-multiload.traces.cpu3 color 'traditional:cpu3'
gsettings set de.mh21.indicator-multiload.traces.cpu4 color 'traditional:cpu4'
gsettings set de.mh21.indicator-multiload.traces.disk1 color 'traditional:disk1'
gsettings set de.mh21.indicator-multiload.traces.disk2 color 'traditional:disk2'
gsettings set de.mh21.indicator-multiload.traces.load1 color 'traditional:load1'
gsettings set de.mh21.indicator-multiload.traces.mem1 color 'traditional:mem1'
gsettings set de.mh21.indicator-multiload.traces.mem2 color 'traditional:mem2'
gsettings set de.mh21.indicator-multiload.traces.mem3 color 'traditional:mem3'
gsettings set de.mh21.indicator-multiload.traces.mem4 color 'traditional:mem4'
gsettings set de.mh21.indicator-multiload.traces.net1 color 'traditional:net1'
gsettings set de.mh21.indicator-multiload.traces.net2 color 'traditional:net2'
gsettings set de.mh21.indicator-multiload.traces.net3 color 'traditional:net3'
gsettings set de.mh21.indicator-multiload.traces.swap1 color 'traditional:swap1'
sleep 3s
# Run resource monitor to get it to autostart next time.
nohup indicator-multiload &


# Configure desktop for investigating
# ---------------------------------

# Tools

tryharderto sudo apt-get --assume-yes install \
  ack \
  ripgrep \
  curl \
  vim \
  wget \
  glances \
  synaptic \
  geany \
  git-gui \
  git-cola \
  terminator \
  byobu \
  gdb \
  meld \
  kdiff3-qt

sudo snap install chromium

# Enable debugging
sudo perl -pi -e 's/kernel.yama.ptrace_scope = 1/kernel.yama.ptrace_scope = 0/' /etc/sysctl.d/10-ptrace.conf

# Further adjust bash prompt
# Show if in flatpak
perl -pi -e '/PS1/ and s/chroot\)\}/chroot\)\}\${FLATPAK_ID+ðŸ“¦ \${FLATPAK_ID} }/' ~/.bashrc
# Show git repo info
perl -pi -e '/PS1/ and s#\\n#\$(! type __git_ps1 &>/dev/null || __git_ps1)\\n#' ~/.bashrc
tee --append ~/.bashrc <<END
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_HIDE_IF_PWD_IGNORED=true
export GIT_PS1_SHOWCOLORHINTS=true
END

# Launchers
TOOLSDIR="${HOME}/Desktop"
mkdir --parents "${TOOLSDIR}"
cp -a --dereference \
  /usr/share/applications/{terminator,byobu}.desktop \
  /snap/chromium/current/meta/gui/chromium.desktop \
  "${TOOLSDIR}"
chmod +x "${TOOLSDIR}"/*.desktop
perl -pi -e 's#\${SNAP}#/snap/chromium/current#' "${TOOLSDIR}"/chromium.desktop

# Set panel icons
gsettings set org.gnome.shell favorite-apps \
  "['firefox_firefox.desktop', 'org.gnome.Nautilus.desktop', 'chromium_chromium.desktop']"


# FieldWorks testing machine setup
# ------------------------------------

BASEDIR="${HOME}"

# Setup

RELEASE=$(lsb_release -sc)
# Use codename of wasta Linux's Ubuntu base
if [ -f /etc/wasta-release ]; then
  source /etc/wasta-release
  RELEASE=$CODENAME
fi

# SIL package repositories
# Remove any existing SIL repositories (such as already in wasta).
sudo perl -ni -e 'print unless /sil\.org/' /etc/apt/sources.list
wget -qO - http://packages.sil.org/sil.gpg | sudo apt-key add -
wget -qO - http://linux.lsdev.sil.org/downloads/sil-testing.gpg | sudo apt-key add -
# Add all these repos, but then comment them out. That will make it easier to enable them by hand later.
sudo add-apt-repository --yes "deb http://packages.sil.org/ubuntu ${RELEASE} main"
sudo add-apt-repository --yes "deb http://packages.sil.org/ubuntu ${RELEASE}-experimental main"
sudo add-apt-repository --yes "deb http://linux.lsdev.sil.org/ubuntu ${RELEASE} main"
sudo add-apt-repository --yes "deb http://linux.lsdev.sil.org/ubuntu ${RELEASE}-updates main"
sudo add-apt-repository --yes "deb http://linux.lsdev.sil.org/ubuntu ${RELEASE}-proposed main"
sudo add-apt-repository --yes "deb http://linux.lsdev.sil.org/ubuntu ${RELEASE}-experimental main"
sudo perl -pi -e '/^deb.*linux.lsdev.sil.org/ and s/^/#/' /etc/apt/sources.list.d/*.list
sudo perl -pi -e "/^deb.*${RELEASE}-experimental/ and s/^/#/" /etc/apt/sources.list.d/*.list

# This machine doesn't need deb-src lines, and they make repo selection more crowded.
sudo perl -pi -e '/deb-src / and s/^/## /' /etc/apt/sources.list /etc/apt/sources.list.d/*.list

tee ~/.gdbinit > /dev/null << END
# Run and debug from one command:
#   Build/run-in-environ gdb mono-sgen --ex "run --debug \$HOME/fwrepo/fw/Output/Debug/FieldWorks.exe"
# Run and debug from separate terminals:
#   Build/run-in-environ mono-sgen --debug \$HOME/fwrepo/fw/Output/Debug/FieldWorks.exe
#   Build/run-in-environ gdb mono-sgen \$(pgrep -f FieldWorks.exe)
#
# http://www.mono-project.com/docs/debug+profile/debug/

handle SIGXCPU SIG33 SIG35 SIG36 SIG37 SIG38 SIGPWR SIG38 nostop noprint

define mono_backtrace
 select-frame 0
 set \$i = 0
 while (\$i < \$arg0)
   set \$foo = (char*) mono_pmip (\$pc)
   if (\$foo)
     printf "#%d %p in %s\n", \$i, \$pc, \$foo
   else
     frame
   end
   up-silently
   set \$i = \$i + 1
 end
end

define mono_stack
 set \$mono_thread = mono_thread_current ()
 if (\$mono_thread == 0x00)
   printf "No mono thread associated with this thread\n"
 else
   set \$ucp = malloc (sizeof (ucontext_t))
   call (void) getcontext (\$ucp)
   call (void) mono_print_thread_dump (\$ucp)
   call (void) free (\$ucp)
 end
end

add-auto-load-safe-path /opt/mono5-sil/bin/mono-sgen-gdb.py
END


tryharderto sudo apt-get update
tryharderto sudo apt-get --assume-yes install keyman

# Paratext
sudo snap install paratext --edge
sudo snap install paratextlite

# Launchers

cp -a --dereference \
  /usr/share/applications/{terminator,geany,byobu}.desktop \
  /snap/paratext/current/meta/gui/paratext.desktop \
  "$TOOLSDIR"
chmod +x "${TOOLSDIR}"/*.desktop
perl -pi -e 's#\${SNAP}#/snap/paratext/current#' "${TOOLSDIR}"/paratext.desktop

# FieldWorks sample data

cd ~
[[ -f 'Sena 3 2017-07-27 1102.fwbackup' ]] ||
  wget 'http://downloads.sil.org/FieldWorks/8.3.9/Sena%203%202017-07-27%201102.fwbackup'

# Trust the launchers. In Ubuntu 20.04 it seems to only work on the desktop.
cd ~/Desktop
for launcher in *.desktop; do
  gio set "${launcher}" metadata::trusted true
done

# Create machine readme
tee ~/Desktop/machine-instructions.txt >/dev/null <<END
Linux FieldWorks Testing Machine

NEXT STEPS

- Automatic OS security updates are turned off (so they don't get scrambled by
  switching off the guest). Install security and other updates since the
  basebox was created by running "Software Updater" or by running the following.
  Try again in a few minutes if the system is already busy fetching updates in
  the background.

    sudo apt update && sudo apt dist-upgrade

NOTES

- You may find it helpful to increase the amount of RAM your virtual machine
  is given. To do this, run the following in your host (not this guest vagrant),
  possibly replacing 5000 MB with even higher. Log out and back in to your host
  and start the vagrant guest again.

    tee --append ~/.pam_environment <<< "FWTEST_RAM=5000"
END

# Apply any updates, perhaps now available because of added repositories.
tryharderto sudo apt-get update
tryharderto sudo apt-get --assume-yes upgrade
tryharderto sudo apt-get --assume-yes dist-upgrade

echo "$0: $(date -Is): Script finished successfully."
